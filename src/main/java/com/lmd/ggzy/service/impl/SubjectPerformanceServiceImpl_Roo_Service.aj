// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.lmd.ggzy.domain.SubjectPerformance;
import com.lmd.ggzy.repository.SubjectPerformanceRepository;

privileged aspect SubjectPerformanceServiceImpl_Roo_Service {
    
    declare @type: SubjectPerformanceServiceImpl: @Service;
    
    declare @type: SubjectPerformanceServiceImpl: @Transactional;
    
    @Autowired
    SubjectPerformanceRepository SubjectPerformanceServiceImpl.subjectPerformanceRepository;
    
    public long SubjectPerformanceServiceImpl.countAllSubjectPerformances() {
        return subjectPerformanceRepository.count();
    }
    
    public void SubjectPerformanceServiceImpl.deleteSubjectPerformance(SubjectPerformance subjectPerformance) {
        subjectPerformanceRepository.delete(subjectPerformance);
    }
    
    public SubjectPerformance SubjectPerformanceServiceImpl.findSubjectPerformance(String id) {
        return subjectPerformanceRepository.findOne(id);
    }
    
    public List<SubjectPerformance> SubjectPerformanceServiceImpl.findAllSubjectPerformances() {
        return subjectPerformanceRepository.findAll();
    }
    
    public List<SubjectPerformance> SubjectPerformanceServiceImpl.findSubjectPerformanceEntries(int firstResult, int maxResults) {
        return subjectPerformanceRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void SubjectPerformanceServiceImpl.saveSubjectPerformance(SubjectPerformance subjectPerformance) {
        subjectPerformanceRepository.save(subjectPerformance);
    }
    
    public SubjectPerformance SubjectPerformanceServiceImpl.updateSubjectPerformance(SubjectPerformance subjectPerformance) {
        return subjectPerformanceRepository.save(subjectPerformance);
    }
    
}
