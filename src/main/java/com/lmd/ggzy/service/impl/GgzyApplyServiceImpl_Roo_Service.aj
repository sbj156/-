// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.lmd.ggzy.domain.GgzyApply;
import com.lmd.ggzy.repository.GgzyApplyRepository;
import com.lmd.ggzy.repository.GgzyComboCompanyRepository;

privileged aspect GgzyApplyServiceImpl_Roo_Service {
    
    declare @type: GgzyApplyServiceImpl: @Service;
    
    declare @type: GgzyApplyServiceImpl: @Transactional;
    
    @Autowired
    GgzyApplyRepository GgzyApplyServiceImpl.ggzyApplyRepository;
    @Autowired
    GgzyComboCompanyRepository GgzyApplyServiceImpl.comboRepository;
    
    public long GgzyApplyServiceImpl.countAllGgzyApplys() {
        return ggzyApplyRepository.count();
    }
    
    public void GgzyApplyServiceImpl.deleteGgzyApply(GgzyApply ggzyApply) {
        ggzyApplyRepository.delete(ggzyApply);
    }
    
    public GgzyApply GgzyApplyServiceImpl.findGgzyApply(String id) {
        return ggzyApplyRepository.findOne(id);
    }
    
    public List<GgzyApply> GgzyApplyServiceImpl.findAllGgzyApplys() {
        return ggzyApplyRepository.findAll();
    }
    
    public List<GgzyApply> GgzyApplyServiceImpl.findGgzyApplyEntries(int firstResult, int maxResults) {
        return ggzyApplyRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void GgzyApplyServiceImpl.saveGgzyApply(GgzyApply ggzyApply) {
        ggzyApplyRepository.save(ggzyApply);
    }
    
    public GgzyApply GgzyApplyServiceImpl.updateGgzyApply(GgzyApply ggzyApply) {
    	ggzyApplyRepository.findOne(ggzyApply.getApplyId());
        return ggzyApplyRepository.save(ggzyApply);
    }
    public void GgzyApplyServiceImpl.updateOfficial(String applyId, boolean official){
    	GgzyApply apply = ggzyApplyRepository.findOne(applyId);
    	apply.setOfficial(official);
    	ggzyApplyRepository.save(apply);
    }
    public void GgzyApplyServiceImpl.updateOfficial(String[] applyIds, boolean official){
    	
    	if(applyIds != null)
    		for(String applyId: applyIds)
    			this.updateOfficial(applyId, official);
    }
    
}
