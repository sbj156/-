// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.controller;

import java.util.List;

import javax.servlet.ServletRequest;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

import com.ketayao.ketacustom.util.dwz.Page;
import com.lmd.ggzy.domain.GgzyBusinessWay;

privileged aspect GgzyBusinessWayController_Roo_Controller_Json {
    
    @RequestMapping(value = "/json/{businessWayId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> GgzyBusinessWayController.showJson(@PathVariable("businessWayId") String businessWayId) {
        GgzyBusinessWay ggzyBusinessWay = ggzyBusinessWayService.findGgzyBusinessWay(businessWayId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ggzyBusinessWay == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ggzyBusinessWay.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json", value="/json")
    @ResponseBody
    public ResponseEntity<String> GgzyBusinessWayController.listJson(ServletRequest request, Page page) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<GgzyBusinessWay> result = ggzyBusinessWayService.findAllGgzyBusinessWays();
        return new ResponseEntity<String>(GgzyBusinessWay.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json", value="/json")
    public ResponseEntity<String> GgzyBusinessWayController.createFromJson(@RequestBody String json, UriComponentsBuilder uriBuilder) {
        GgzyBusinessWay ggzyBusinessWay = GgzyBusinessWay.fromJsonToGgzyBusinessWay(json);
        ggzyBusinessWayService.saveGgzyBusinessWay(ggzyBusinessWay);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        RequestMapping a = (RequestMapping) getClass().getAnnotation(RequestMapping.class);
        headers.add("Location",uriBuilder.path(a.value()[0]+"/"+ggzyBusinessWay.getBusinessWayId().toString()).build().toUriString());
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyBusinessWayController.createFromJsonArray(@RequestBody String json) {
        for (GgzyBusinessWay ggzyBusinessWay: GgzyBusinessWay.fromJsonArrayToGgzyBusinessWays(json)) {
            ggzyBusinessWayService.saveGgzyBusinessWay(ggzyBusinessWay);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/json/{businessWayId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyBusinessWayController.updateFromJson(@RequestBody String json, @PathVariable("businessWayId") String businessWayId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        GgzyBusinessWay ggzyBusinessWay = GgzyBusinessWay.fromJsonToGgzyBusinessWay(json);
        ggzyBusinessWay.setBusinessWayId(businessWayId);
        if (ggzyBusinessWayService.updateGgzyBusinessWay(ggzyBusinessWay) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/json/{businessWayId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyBusinessWayController.deleteFromJson(@PathVariable("businessWayId") String businessWayId) {
        GgzyBusinessWay ggzyBusinessWay = ggzyBusinessWayService.findGgzyBusinessWay(businessWayId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ggzyBusinessWay == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ggzyBusinessWayService.deleteGgzyBusinessWay(ggzyBusinessWay);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
