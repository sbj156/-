// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.controller;

import com.lmd.ggzy.controller.GgzyProQuaApplyDocController;
import com.lmd.ggzy.domain.GgzyProQuaApplyDoc;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

privileged aspect GgzyProQuaApplyDocController_Roo_Controller_Json {
    
    @RequestMapping(value = "/json/{proQuaApplyDocId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> GgzyProQuaApplyDocController.showJson(@PathVariable("proQuaApplyDocId") String proQuaApplyDocId) {
        GgzyProQuaApplyDoc ggzyProQuaApplyDoc = ggzyProQuaApplyDocService.findGgzyProQuaApplyDoc(proQuaApplyDocId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ggzyProQuaApplyDoc == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ggzyProQuaApplyDoc.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json", value="/json")
    @ResponseBody
    public ResponseEntity<String> GgzyProQuaApplyDocController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<GgzyProQuaApplyDoc> result = ggzyProQuaApplyDocService.findAllGgzyProQuaApplyDocs();
        return new ResponseEntity<String>(GgzyProQuaApplyDoc.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json", value="/json")
    public ResponseEntity<String> GgzyProQuaApplyDocController.createFromJson(@RequestBody String json, UriComponentsBuilder uriBuilder) {
        GgzyProQuaApplyDoc ggzyProQuaApplyDoc = GgzyProQuaApplyDoc.fromJsonToGgzyProQuaApplyDoc(json);
        ggzyProQuaApplyDocService.saveGgzyProQuaApplyDoc(ggzyProQuaApplyDoc);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        RequestMapping a = (RequestMapping) getClass().getAnnotation(RequestMapping.class);
        headers.add("Location",uriBuilder.path(a.value()[0]+"/"+ggzyProQuaApplyDoc.getProQuaApplyDocId().toString()).build().toUriString());
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyProQuaApplyDocController.createFromJsonArray(@RequestBody String json) {
        for (GgzyProQuaApplyDoc ggzyProQuaApplyDoc: GgzyProQuaApplyDoc.fromJsonArrayToGgzyProQuaApplyDocs(json)) {
            ggzyProQuaApplyDocService.saveGgzyProQuaApplyDoc(ggzyProQuaApplyDoc);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/json/{proQuaApplyDocId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyProQuaApplyDocController.updateFromJson(@RequestBody String json, @PathVariable("proQuaApplyDocId") String proQuaApplyDocId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        GgzyProQuaApplyDoc ggzyProQuaApplyDoc = GgzyProQuaApplyDoc.fromJsonToGgzyProQuaApplyDoc(json);
        ggzyProQuaApplyDoc.setProQuaApplyDocId(proQuaApplyDocId);
        if (ggzyProQuaApplyDocService.updateGgzyProQuaApplyDoc(ggzyProQuaApplyDoc) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/json/{proQuaApplyDocId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyProQuaApplyDocController.deleteFromJson(@PathVariable("proQuaApplyDocId") String proQuaApplyDocId) {
        GgzyProQuaApplyDoc ggzyProQuaApplyDoc = ggzyProQuaApplyDocService.findGgzyProQuaApplyDoc(proQuaApplyDocId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ggzyProQuaApplyDoc == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ggzyProQuaApplyDocService.deleteGgzyProQuaApplyDoc(ggzyProQuaApplyDoc);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
