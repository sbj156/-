// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.controller;

import java.util.List;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

import com.lmd.ggzy.domain.GgzyOtherScore;
import com.lmd.ggzy.domain.pk.GgzyOtherScorePk;

privileged aspect GgzyOtherScoreController_Roo_Controller_Json {
    
    @RequestMapping(value = "/json/{id}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> GgzyOtherScoreController.showJson(@PathVariable("id") GgzyOtherScorePk id) {
        GgzyOtherScore ggzyOtherScore = ggzyOtherScoreService.findGgzyOtherScore(id);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ggzyOtherScore == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ggzyOtherScore.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json", value = "/json")
    @ResponseBody
    public ResponseEntity<String> GgzyOtherScoreController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<GgzyOtherScore> result = ggzyOtherScoreService.findAllGgzyOtherScores();
        return new ResponseEntity<String>(GgzyOtherScore.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json", value="/json")
    public ResponseEntity<String> GgzyOtherScoreController.createFromJson(@RequestBody String json, UriComponentsBuilder uriBuilder) {
        GgzyOtherScore ggzyOtherScore = GgzyOtherScore.fromJsonToGgzyOtherScore(json);
        ggzyOtherScoreService.saveGgzyOtherScore(ggzyOtherScore);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        RequestMapping a = (RequestMapping) getClass().getAnnotation(RequestMapping.class);
//        headers.add("Location",uriBuilder.path(a.value()[0]+"/"+ggzyOtherScore.getId().toString()).build().toUriString());
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyOtherScoreController.createFromJsonArray(@RequestBody String json) {
        for (GgzyOtherScore ggzyOtherScore: GgzyOtherScore.fromJsonArrayToGgzyOtherScores(json)) {
            ggzyOtherScoreService.saveGgzyOtherScore(ggzyOtherScore);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/json/{id}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyOtherScoreController.updateFromJson(@RequestBody String json, @PathVariable("id") GgzyOtherScorePk id) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        GgzyOtherScore ggzyOtherScore = GgzyOtherScore.fromJsonToGgzyOtherScore(json);
        ggzyOtherScore.setId(id);
        if (ggzyOtherScoreService.updateGgzyOtherScore(ggzyOtherScore) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/json/{id}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyOtherScoreController.deleteFromJson(@PathVariable("id") GgzyOtherScorePk id) {
        GgzyOtherScore ggzyOtherScore = ggzyOtherScoreService.findGgzyOtherScore(id);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ggzyOtherScore == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ggzyOtherScoreService.deleteGgzyOtherScore(ggzyOtherScore);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
