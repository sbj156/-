// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.controller;

import com.ketayao.ketacustom.util.dwz.Page;
import com.ketayao.ketacustom.util.persistence.DynamicSpecifications;
import com.ketayao.utils.ServletUtils;
import com.lmd.ggzy.controller.GgzyMajorTypeController;
import com.lmd.ggzy.domain.GgzyMajorType;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.tiles.servlet.context.ServletUtil;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

privileged aspect GgzyMajorTypeController_Roo_Controller_Json {
    
    @RequestMapping(value = "/json/{majorTypeId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> GgzyMajorTypeController.showJson(@PathVariable("majorTypeId") String majorTypeId) {
        GgzyMajorType ggzyMajorType = ggzyMajorTypeService.findGgzyMajorType(majorTypeId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ggzyMajorType == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ggzyMajorType.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json", value="/json")
    @ResponseBody
    public ResponseEntity<String> GgzyMajorTypeController.listJson(HttpServletRequest request, Page page) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        System.out.println( ServletUtils.getParametersStartingWith(request, ""));
        Specification<GgzyMajorType> s = DynamicSpecifications.bySearchFilter(request, GgzyMajorType.class);
        List<GgzyMajorType> result = ggzyMajorTypeService.findByExample(s, page);
        return new ResponseEntity<String>(GgzyMajorType.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json", value="/json")
    public ResponseEntity<String> GgzyMajorTypeController.createFromJson(@RequestBody String json, UriComponentsBuilder uriBuilder) {
        GgzyMajorType ggzyMajorType = GgzyMajorType.fromJsonToGgzyMajorType(json);
        ggzyMajorTypeService.saveGgzyMajorType(ggzyMajorType);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        RequestMapping a = (RequestMapping) getClass().getAnnotation(RequestMapping.class);
        headers.add("Location",uriBuilder.path(a.value()[0]+"/"+ggzyMajorType.getMajorTypeId().toString()).build().toUriString());
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyMajorTypeController.createFromJsonArray(@RequestBody String json) {
        for (GgzyMajorType ggzyMajorType: GgzyMajorType.fromJsonArrayToGgzyMajorTypes(json)) {
            ggzyMajorTypeService.saveGgzyMajorType(ggzyMajorType);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/json/{majorTypeId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyMajorTypeController.updateFromJson(@RequestBody String json, @PathVariable("majorTypeId") String majorTypeId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        GgzyMajorType ggzyMajorType = GgzyMajorType.fromJsonToGgzyMajorType(json);
        ggzyMajorType.setMajorTypeId(majorTypeId);
        if (ggzyMajorTypeService.updateGgzyMajorType(ggzyMajorType) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/json/{majorTypeId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyMajorTypeController.deleteFromJson(@PathVariable("majorTypeId") String majorTypeId) {
        GgzyMajorType ggzyMajorType = ggzyMajorTypeService.findGgzyMajorType(majorTypeId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ggzyMajorType == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ggzyMajorTypeService.deleteGgzyMajorType(ggzyMajorType);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
