// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.controller;

import com.lmd.ggzy.controller.GgzyProQuaDocController;
import com.lmd.ggzy.domain.GgzyProQuaDoc;
import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

privileged aspect GgzyProQuaDocController_Roo_Controller_Json {
    
    @RequestMapping(value = "/json/{proQuaDocId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> GgzyProQuaDocController.showJson(@PathVariable("proQuaDocId") String proQuaDocId) {
        GgzyProQuaDoc ggzyProQuaDoc = ggzyProQuaDocService.findGgzyProQuaDoc(proQuaDocId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ggzyProQuaDoc == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ggzyProQuaDoc.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json", value="/json")
    @ResponseBody
    public ResponseEntity<String> GgzyProQuaDocController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<GgzyProQuaDoc> result = ggzyProQuaDocService.findAllGgzyProQuaDocs();
        return new ResponseEntity<String>(GgzyProQuaDoc.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json", value="/json")
    public ResponseEntity<String> GgzyProQuaDocController.createFromJson(@RequestBody String json, UriComponentsBuilder uriBuilder) {
        GgzyProQuaDoc ggzyProQuaDoc = GgzyProQuaDoc.fromJsonToGgzyProQuaDoc(json);
        ggzyProQuaDocService.saveGgzyProQuaDoc(ggzyProQuaDoc);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        RequestMapping a = (RequestMapping) getClass().getAnnotation(RequestMapping.class);
        headers.add("Location",uriBuilder.path(a.value()[0]+"/"+ggzyProQuaDoc.getProQuaDocId().toString()).build().toUriString());
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyProQuaDocController.createFromJsonArray(@RequestBody String json) {
        for (GgzyProQuaDoc ggzyProQuaDoc: GgzyProQuaDoc.fromJsonArrayToGgzyProQuaDocs(json)) {
            ggzyProQuaDocService.saveGgzyProQuaDoc(ggzyProQuaDoc);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/json/{proQuaDocId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyProQuaDocController.updateFromJson(@RequestBody String json, @PathVariable("proQuaDocId") String proQuaDocId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        GgzyProQuaDoc ggzyProQuaDoc = GgzyProQuaDoc.fromJsonToGgzyProQuaDoc(json);
        ggzyProQuaDoc.setProQuaDocId(proQuaDocId);
        if (ggzyProQuaDocService.updateGgzyProQuaDoc(ggzyProQuaDoc) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/json/{proQuaDocId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyProQuaDocController.deleteFromJson(@PathVariable("proQuaDocId") String proQuaDocId) {
        GgzyProQuaDoc ggzyProQuaDoc = ggzyProQuaDocService.findGgzyProQuaDoc(proQuaDocId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ggzyProQuaDoc == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ggzyProQuaDocService.deleteGgzyProQuaDoc(ggzyProQuaDoc);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
