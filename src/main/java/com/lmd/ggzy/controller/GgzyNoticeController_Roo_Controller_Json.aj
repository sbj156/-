// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.controller;

import com.lmd.ggzy.controller.GgzyNoticeController;
import com.lmd.ggzy.domain.GgzyNotice;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriComponentsBuilder;

privileged aspect GgzyNoticeController_Roo_Controller_Json {
    
    @RequestMapping(value = "/json/{noticeId}", method = RequestMethod.GET, headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> GgzyNoticeController.showJson(@PathVariable("noticeId") String noticeId) {
        GgzyNotice ggzyNotice = ggzyNoticeService.findGgzyNotice(noticeId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (ggzyNotice == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(ggzyNotice.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json", value="/json")
    @ResponseBody
    public ResponseEntity<String> GgzyNoticeController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<GgzyNotice> result = ggzyNoticeService.findAllGgzyNotices();
        return new ResponseEntity<String>(GgzyNotice.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json", value="/json")
    public ResponseEntity<String> GgzyNoticeController.createFromJson(@RequestBody String json, UriComponentsBuilder uriBuilder) {
        GgzyNotice ggzyNotice = GgzyNotice.fromJsonToGgzyNotice(json);
        ggzyNoticeService.saveGgzyNotice(ggzyNotice);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        RequestMapping a = (RequestMapping) getClass().getAnnotation(RequestMapping.class);
        headers.add("Location",uriBuilder.path(a.value()[0]+"/"+ggzyNotice.getNoticeId().toString()).build().toUriString());
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyNoticeController.createFromJsonArray(@RequestBody String json) {
        for (GgzyNotice ggzyNotice: GgzyNotice.fromJsonArrayToGgzyNotices(json)) {
            ggzyNoticeService.saveGgzyNotice(ggzyNotice);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/json/{noticeId}", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyNoticeController.updateFromJson(@RequestBody String json, @PathVariable("noticeId") String noticeId) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        GgzyNotice ggzyNotice = GgzyNotice.fromJsonToGgzyNotice(json);
        ggzyNotice.setNoticeId(noticeId);
        if (ggzyNoticeService.updateGgzyNotice(ggzyNotice) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/json/{noticeId}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> GgzyNoticeController.deleteFromJson(@PathVariable("noticeId") String noticeId) {
        GgzyNotice ggzyNotice = ggzyNoticeService.findGgzyNotice(noticeId);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (ggzyNotice == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        ggzyNoticeService.deleteGgzyNotice(ggzyNotice);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
}
