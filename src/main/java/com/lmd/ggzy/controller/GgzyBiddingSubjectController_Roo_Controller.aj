// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.lmd.ggzy.controller;

import java.io.UnsupportedEncodingException;
import java.util.List;

import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.joda.time.format.DateTimeFormat;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

import com.ketayao.ketacustom.util.dwz.AjaxObject;
import com.ketayao.ketacustom.util.dwz.Page;
import com.ketayao.ketacustom.util.persistence.DynamicSpecifications;
import com.lmd.ggzy.domain.GgzyBiddingSubject;
import com.lmd.ggzy.service.GgzyApplyService;
import com.lmd.ggzy.service.GgzyBiddingSubjectService;
import com.lmd.ggzy.service.GgzyQualificationService;
import com.lmd.ggzy.service.SubjectPerformanceService;

privileged aspect GgzyBiddingSubjectController_Roo_Controller {

	@Autowired
	GgzyBiddingSubjectService GgzyBiddingSubjectController.ggzyBiddingSubjectService;

	@Autowired
	GgzyApplyService GgzyBiddingSubjectController.ggzyApplyService;

	@Autowired
	GgzyQualificationService GgzyBiddingSubjectController.ggzyQualificationService;

	@Autowired
	SubjectPerformanceService GgzyBiddingSubjectController.subjectPerformanceService;

	@RequestMapping(method = RequestMethod.POST, produces = "text/html")
	public String GgzyBiddingSubjectController.create(@Valid GgzyBiddingSubject ggzyBiddingSubject, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
		AjaxObject status = null;
		if (bindingResult.hasErrors()) {
			status = AjaxObject.newError(bindingResult.getFieldError().getDefaultMessage());
		} else {
			uiModel.asMap().clear();
			ggzyBiddingSubjectService.saveGgzyBiddingSubject(ggzyBiddingSubject);
			status = AjaxObject.newOk(ControllerConst.ADD_SUCCESS, true);
		}
		uiModel.addAttribute(ControllerConst.STATUS, status);
		return ControllerConst.JSON_STATUS_VIEW;
	}

	@RequestMapping(params = "form", produces = "text/html")
	public String GgzyBiddingSubjectController.createForm(Model uiModel) {
		populateEditForm(uiModel, new GgzyBiddingSubject());
		return "ggzybiddingsubjects/create";
	}

	@RequestMapping(value = "/{biddingSubjectId}", produces = "text/html")
	public String GgzyBiddingSubjectController.show(@PathVariable("biddingSubjectId") String biddingSubjectId, Model uiModel) {
		addDateTimeFormatPatterns(uiModel);
		uiModel.addAttribute("ggzyBiddingSubject", ggzyBiddingSubjectService.findGgzyBiddingSubject(biddingSubjectId));
		uiModel.addAttribute("itemId", biddingSubjectId);
		return "ggzybiddingsubjects/show";
	}

	@RequestMapping(produces = "text/html")
	public String GgzyBiddingSubjectController.list(ServletRequest request, Page page, Model map) {
		this.list_(request, page, map);
		return "ggzybiddingsubjects/list";
	}

	public void GgzyBiddingSubjectController.list_(ServletRequest request, Page page, Model map) {
		Specification<GgzyBiddingSubject> specification = DynamicSpecifications.bySearchFilter(request, GgzyBiddingSubject.class);
		map.addAttribute("page", page);
		List<GgzyBiddingSubject> list = ggzyBiddingSubjectService.findByExample(specification, page);
		map.addAttribute("list", list);
	}

	@RequestMapping("/lookUpList")
	public String GgzyBiddingSubjectController.loolkUpList(ServletRequest request, Page page, Model map) {
		this.list_(request, page, map);
		return "ggzybiddingsubjects/lookUpList";
	}

	@RequestMapping(method = RequestMethod.PUT)
	public @ResponseBody
	String GgzyBiddingSubjectController.update(@Valid GgzyBiddingSubject ggzyBiddingSubject, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
		if (bindingResult.hasErrors()) {
			populateEditForm(uiModel, ggzyBiddingSubject);
			return "ggzybiddingsubjects/update";
		}
		uiModel.asMap().clear();
		ggzyBiddingSubjectService.updateGgzyBiddingSubject(ggzyBiddingSubject);
		return AjaxObject.newOk("修改成功").toString();
	}

	@RequestMapping(value = "/{biddingSubjectId}", params = "form", produces = "text/html")
	public String GgzyBiddingSubjectController.updateForm(@PathVariable("biddingSubjectId") String biddingSubjectId, Model uiModel) {
		populateEditForm(uiModel, ggzyBiddingSubjectService.findGgzyBiddingSubject(biddingSubjectId));
		return "ggzybiddingsubjects/update";
	}

	@RequestMapping(value = "/{biddingSubjectId}", method = RequestMethod.DELETE)
	public String GgzyBiddingSubjectController.delete(@PathVariable("biddingSubjectId") String biddingSubjectId, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
		GgzyBiddingSubject ggzyBiddingSubject = ggzyBiddingSubjectService.findGgzyBiddingSubject(biddingSubjectId);
		ggzyBiddingSubjectService.deleteGgzyBiddingSubject(ggzyBiddingSubject);
		uiModel.asMap().clear();
		uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
		uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
		return "redirect:/ggzybiddingsubjects";
	}

	void GgzyBiddingSubjectController.addDateTimeFormatPatterns(Model uiModel) {
		uiModel.addAttribute("ggzyBiddingSubject_verifytime_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
	}

	void GgzyBiddingSubjectController.populateEditForm(Model uiModel, GgzyBiddingSubject ggzyBiddingSubject) {
		uiModel.addAttribute("ggzyBiddingSubject", ggzyBiddingSubject);
		addDateTimeFormatPatterns(uiModel);
		uiModel.addAttribute("ggzyapplys", ggzyApplyService.findAllGgzyApplys());
		uiModel.addAttribute("ggzyqualifications", ggzyQualificationService.findAllGgzyQualifications());
		uiModel.addAttribute("subjectperformances", subjectPerformanceService.findAllSubjectPerformances());
	}

	String GgzyBiddingSubjectController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
		String enc = httpServletRequest.getCharacterEncoding();
		if (enc == null) {
			enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
		}
		try {
			pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
		} catch (UnsupportedEncodingException uee) {
		}
		return pathSegment;
	}

	@RequestMapping(value = "/delete")
	public @ResponseBody
	String GgzyBiddingSubjectController.deleteManey(@RequestParam("ids") String[] ids) {
		for (String id : ids) {
			GgzyBiddingSubject ggzyBiddingSubject = ggzyBiddingSubjectService.findGgzyBiddingSubject(id);
			ggzyBiddingSubjectService.deleteGgzyBiddingSubject(ggzyBiddingSubject);
		}
		return AjaxObject.newOk("删除成功！").setCallbackType("").toString();
	}

}
